-- Configuration
local CONFIG = {
    REBIRTH_THRESHOLD_BASE = 10000,
    REBIRTH_THRESHOLD_MULTIPLIER = 5000,
    GOLDEN_REBIRTH_MULTIPLIER = 0.1,
    REP_COUNT = 10,
    CHECK_INTERVAL = 0.1,
    PET_EQUIP_DELAY = 0.01,
    MACHINE_CHECK_INTERVAL = 0.1,
}

-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- Local player
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("HumanoidRootPart")

-- Library setup
local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()
local SaveManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/SaveManager.luau"))()
local InterfaceManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/InterfaceManager.luau"))()

-- Window setup
local Window = Library:CreateWindow({
    Title = "Muscle King Script",
    SubTitle = "By Godlike",
    TabWidth = 125,
    Size = UDim2.fromOffset(830, 525),
    Resize = true,
    MinSize = Vector2.new(470, 380),
    Acrylic = true,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.RightControl
})

-- Notification
Library:Notify({
    Title = "Welcome",
    Content = "Hope you enjoy!!!",
    SubContent = "Made by Godlike",
    Duration = 5
})

-- Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "aperture" }),
    Performance = Window:AddTab({ Title = "Performance", Icon = "0" }),
    AutoWeight = Window:AddTab({ Title = "Auto Weight", Icon = "dumbbell" }),
    AutoRebirth = Window:AddTab({ Title = "Auto Rebirth", Icon = "circle-fading-arrow-up" }),
    AutoKill = Window:AddTab({ Title = "Auto Kill", Icon = "utensils" }),
    AutoRock = Window:AddTab({ Title = "Auto Rock", Icon = "mountain" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "settings" }),
    Credits = Window:AddTab({ Title = "Credits", Icon = "file" }),
}

-- State management
local isToggled = false
local runningCoroutine = nil

-- Helper functions
local function unequipAllPets()
    local petsFolder = LocalPlayer:FindFirstChild("petsFolder")
    if not petsFolder then return false end

    for _, petFolder in pairs(petsFolder:GetChildren()) do
        if petFolder:IsA("Folder") then
            for _, pet in pairs(petFolder:GetChildren()) do
                pcall(function()
                    ReplicatedStorage.rEvents.equipPetEvent:FireServer("unequipPet", pet)
                end)
            end
        end
    end
    return true
end

local function equipPetByName(petName)
    if not unequipAllPets() then return false end
    task.wait(CONFIG.PET_EQUIP_DELAY)

    local uniquePets = LocalPlayer.petsFolder:FindFirstChild("Unique")
    if not uniquePets then return false end

    for _, pet in pairs(uniquePets:GetChildren()) do
        if pet.Name == petName then
            pcall(function()
                ReplicatedStorage.rEvents.equipPetEvent:FireServer("equipPet", pet)
            end)
            return true
        end
    end
    return false
end

local function findMachine(machineName)
    local machine = workspace.machinesFolder:FindFirstChild(machineName)
    if not machine then
        for _, folder in pairs(workspace:GetChildren()) do
            if folder:IsA("Folder") and folder.Name:find("machines") then
                machine = folder:FindFirstChild(machineName)
                if machine then break end
            end
        end
    end
    return machine
end

local function simulateKeyPress()
    pcall(function()
        VirtualInputManager:SendKeyEvent(true, "E", false, game)
        task.wait(CONFIG.CHECK_INTERVAL)
        VirtualInputManager:SendKeyEvent(false, "E", false, game)
    end)
end

-- Main toggle functionality
Tabs.Main:AddToggle({
    Title = "Fast Rebirth",
    Description = "Automates rebirth process",
    Default = false,
    Callback = function(Value)
        isToggled = Value
        
        if runningCoroutine then
            coroutine.close(runningCoroutine)
            runningCoroutine = nil
        end

        if not Value then return end

        runningCoroutine = task.spawn(function()
            while isToggled do
                -- Safety checks
                if not LocalPlayer or not LocalPlayer.leaderstats or not LocalPlayer.leaderstats.Rebirths then
                    task.wait(CONFIG.CHECK_INTERVAL)
                    continue
                end

                local rebirths = LocalPlayer.leaderstats.Rebirths.Value
                local strengthThreshold = CONFIG.REBIRTH_THRESHOLD_BASE + (CONFIG.REBIRTH_THRESHOLD_MULTIPLIER * rebirths)

                -- Apply Golden Rebirth multiplier
                local ultimatesFolder = LocalPlayer:FindFirstChild("ultimatesFolder")
                if ultimatesFolder and ultimatesFolder:FindFirstChild("Golden Rebirth") then
                    local goldenRebirthValue = ultimatesFolder["Golden Rebirth"].Value
                    strengthThreshold = math.floor(strengthThreshold * (1 - (goldenRebirthValue * CONFIG.GOLDEN_REBIRTH_MULTIPLIER)))
                end

                -- Training phase
                if not equipPetByName("Swift Samurai") then
                    Library:Notify({
                        Title = "Error",
                        Content = "Failed to equip Swift Samurai",
                        Duration = 3
                    })
                end

                while isToggled and LocalPlayer.leaderstats.Strength.Value < strengthThreshold do
                    for _ = 1, CONFIG.REP_COUNT do
                        pcall(function()
                            LocalPlayer.muscleEvent:FireServer("rep")
                        end)
                    end
                    task.wait()
                end

                -- Rebirth phase
                if not equipPetByName("Tribal Overlord") then
                    Library:Notify({
                        Title = "Error",
                        Content = "Failed to equip Tribal Overlord",
                        Duration = 3
                    })
                end

                local jungleBarLift = findMachine("Jungle Bar Lift")
                if jungleBarLift and jungleBarLift:FindFirstChild("interactSeat") then
                    pcall(function()
                        Humanoid.CFrame = jungleBarLift.interactSeat.CFrame * CFrame.new(0, 3, 0)
                        repeat
                            simulateKeyPress()
                            task.wait(CONFIG.MACHINE_CHECK_INTERVAL)
                        until LocalPlayer.Character.Humanoid.Sit or not isToggled
                    end)
                end

                local initialRebirths = LocalPlayer.leaderstats.Rebirths.Value
                repeat
                    pcall(function()
                        ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                    end)
                    task.wait(CONFIG.CHECK_INTERVAL)
                until not isToggled or LocalPlayer.leaderstats.Rebirths.Value > initialRebirths

                task.wait()
            end
        end)
    end
})

-- Cleanup on script end
game:BindToClose(function()
    isToggled = false
    if runningCoroutine then
        coroutine.close(runningCoroutine)
    end
end)
